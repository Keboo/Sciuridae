# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build --configuration Release 

      - name: dotnet publish Api
        run: dotnet publish Sciuridae.Api/Sciuridae.Api.csproj -c Release --no-build -o ${{env.DOTNET_ROOT}}/Sciuridae.Api

      - name: dotnet publish Cli
        run: dotnet publish Sciuridae.Cli/Sciuridae.Cli.csproj -c Release -r win-x64 --self-contained

      - name: dotnet pack NuGet
        run: dotnet pack Sciuridae.Cli/Sciuridae.Cli.csproj -c Release --no-build -o ${{env.DOTNET_ROOT}}/Sciuridae.NuGet

      - name: Upload API for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/Sciuridae.Api
       
      - name: Upload NuGet package
        uses: actions/upload-artifact@v3
        with:
          name: NuGet
          path: ${{env.DOTNET_ROOT}}/Sciuridae.NuGet

  automerge:
    if: ${{ github.event_name == 'pull_request' }}
    needs: build
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write
      contents: write

    steps:
      - name: Wait for CodeQL
        uses: fountainhead/action-wait-for-check@v1.1.0
        id: wait-for-codeql
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: CodeQL
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: fastify/github-action-merge-dependabot@v3.8.0
        if: steps.wait-for-codeql.outputs.conclusion == 'success'

  deploy:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'sciuridae'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_19C055139850401EA6A7A2E8959FCC4D }}
          package: .

  deploy-nuget:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'NuGetDeploy'
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: NuGet
          
      - name: Push NuGet
        run: dotnet nuget push ${{ github.workspace }}/*nupkg --source https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }} --skip-duplicate
